<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.binggo.apiwatchdog.mapper.ApiProviderMapper" >
  <resultMap id="ApiProviderResultMap" type="org.binggo.apiwatchdog.domain.ApiProvider" >
    <id column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="weixin_receivers" property="weixinReceivers" jdbcType="VARCHAR" />
    <result column="mail_receivers" property="mailReceivers" jdbcType="VARCHAR" />
    <result column="phone_receivers" property="phoneReceivers" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ProviderConfResultMap" type="org.binggo.apiwatchdog.config.ProviderConfiguration">
  	<id column="provider_id" property="providerId" jdbcType="INTEGER" />
  	<result column="state" property="state" jdbcType="TINYINT" />
  	<result column="weixin_receivers" property="weixinReceivers" jdbcType="VARCHAR" />
    <result column="mail_receivers" property="mailReceivers" jdbcType="VARCHAR" />
    <result column="phone_receivers" property="phoneReceivers" jdbcType="VARCHAR" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    name, description, version, state, weixin_receivers, mail_receivers, phone_receivers
  </sql>
  
  <insert id="insert" parameterType="org.binggo.apiwatchdog.domain.ApiProvider" useGeneratedKeys="true" keyProperty="provider_id">
  	insert into api_provider (
  		<include refid="Base_Column_List" />,
  		created_time,
  		last_updated_time
  	) values (
  		#{name,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{version,jdbcType=VARCHAR}, 
      	#{state,jdbcType=TINYINT}, #{weixinReceivers,jdbcType=VARCHAR}, #{mailReceivers,jdbcType=VARCHAR}, 
      	#{phoneReceivers,jdbcType=VARCHAR}, now(), now()
    )
  </insert>
  
  <delete id="deleteById" parameterType="java.lang.Integer">
  	delete from api_provider where provider_id = #{providerId,jdbcType=INTEGER}
  </delete>
  
  <update id="updateById" parameterType="org.binggo.apiwatchdog.domain.ApiProvider">
  	update api_provider
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="weixinReceivers != null" >
        weixin_receivers = #{weixinReceivers,jdbcType=VARCHAR},
      </if>
      <if test="mailReceivers != null" >
        mail_receivers = #{mailReceivers,jdbcType=VARCHAR},
      </if>
      <if test="phoneReceivers != null" >
        phone_receivers = #{phoneReceivers,jdbcType=VARCHAR},
      </if>
      <if test="true">
      	last_updated_time = now(),
      </if>
    </set>
    where provider_id = #{providerId,jdbcType=INTEGER}
  </update>
  
  <select id="listApiProviders" resultMap="ApiProviderResultMap">
  	select
  		provider_id,
  		<include refid="Base_Column_List" />
  	 from api_provider
  </select>
  
  <!-- for ProviderConfiguration -->
  <select id="listProviderConf" resultMap="ProviderConfResultMap">
  	select provider_id, state, weixin_receivers, mail_receivers, phone_receivers
  	from api_provider
  </select>

</mapper>