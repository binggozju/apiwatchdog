<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.binggo.apiwatchdog.mapper.ApiItemMapper" >
  <resultMap id="ApiItemResultMap" type="org.binggo.apiwatchdog.domain.ApiItem" >
    <id column="api_id" property="apiId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="metric_not200" property="metricNot200" jdbcType="TINYINT" />
    <result column="metric_200_not0" property="metric200Not0" jdbcType="TINYINT" />
    <result column="metric_resptime_threshold" property="metricResptimeThreshold" jdbcType="TINYINT" />
    <result column="alarm_type" property="alarmType" jdbcType="TINYINT" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    name, description, path, type, version, provider_id, state, 
    metric_not200, metric_200_not0, metric_resptime_threshold, alarm_type
  </sql>
  
  <insert id="insert" parameterType="org.binggo.apiwatchdog.domain.ApiItem" useGeneratedKeys="true" keyProperty="api_id">
  	insert into api_item (
  		<include refid="Base_Column_List" />,
  		created_time,
  		last_updated_time
  	) values (
  		#{name,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}, #{path,jdbcType=VARCHAR}, 
      	#{type,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, 
      	#{state,jdbcType=TINYINT}, #{metricNot200,jdbcType=TINYINT}, #{metric200Not0,jdbcType=TINYINT}, 
      	#{metricResptimeThreshold,jdbcType=TINYINT}, #{alarmType,jdbcType=TINYINT},
      	now(), now()
  	)
  </insert>
  
  <delete id="deleteById" parameterType="java.lang.Integer">
  	delete from api_item where api_id = #{apiId,jdbcType=INTEGER}
  </delete>
  
  <update id="updateById" parameterType="org.binggo.apiwatchdog.domain.ApiItem">
  	update api_item
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="metricNot200 != null" >
        metric_not200 = #{metricNot200,jdbcType=TINYINT},
      </if>
      <if test="metric200Not0 != null" >
        metric_200_not0 = #{metric200Not0,jdbcType=TINYINT},
      </if>
      <if test="metricResptimeThreshold != null" >
        metric_resptime_threshold = #{metricResptimeThreshold,jdbcType=TINYINT},
      </if>
      <if test="alarmType != null" >
        alarm_type = #{alarmType,jdbcType=TINYINT},
      </if>
      <if test="true">
      	last_updated_time = now(),
      </if>
    </set>
    where api_id = #{apiId,jdbcType=INTEGER}
  </update>
  
  <select id="listApiItemsByProviderId" resultMap="ApiItemResultMap" parameterType="java.lang.Integer">
  	select
  		api_id,
  		<include refid="Base_Column_List" />
  	from api_item where provider_id = #{providerId,jdbcType=INTEGER}
  </select>
  
  <select id="listApiItems" resultMap="ApiItemResultMap">
  	select
  		api_id,
  		<include refid="Base_Column_List" />
  	from api_item
  </select>
  
</mapper>